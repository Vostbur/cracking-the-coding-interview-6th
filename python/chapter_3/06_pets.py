# В приюте для животных есть только собаки и кошки, а работа осуществляется в порядке очереди.
# Люди должны каждый раз забирать «самое старое»
# (по времени пребывания в питомнике) животное, но могут выбрать кошку
# или собаку (животное в любом случае будет «самым старым»). Нельзя выбрать любое понравившееся животное.
# Создайте структуру данных, которая
# обеспечивает функционирование этой системы и реализует операции enqueue,
# dequeueAny, dequeueDog и dequeueCat. Разрешается использование встроенной
# структуры данных LinkedList.
#
# Можно рассмотреть возможность ведения одного связного списка для собак
# и кошек, а затем перебирать его содержимое до нахождения первой собаки
# (или кошки). К каким последствиям приведет такое решение?
#
# Предположим, для собак и кошек ведутся раздельные списки.
# Как найти самое старое животное каждого типа?
# Подойдите к делу творчески!
#
# Подумайте, как бы вы решили эту задачу в реальной жизни. Имеется список
# собак в хронологическом порядке и список кошек в хронологическом порядке.
# Какие данные необходимы для нахождения самого старого животного?
# Как организовать хранение этих данных?